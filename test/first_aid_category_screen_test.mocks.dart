// Mocks generated by Mockito 5.4.6 from annotations
// in takmed/test/first_aid_category_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:takmed/database/medicine_db/medicine.dart' as _i4;
import 'package:takmed/database/medicine_db/medicine_database_helper.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MedicineDatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockMedicineDatabaseHelper extends _i1.Mock
    implements _i2.MedicineDatabaseHelper {
  MockMedicineDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> insertMedicine(_i4.Medicine? medicine) =>
      (super.noSuchMethod(
            Invocation.method(#insertMedicine, [medicine]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> updateMedicine(_i4.Medicine? medicine) =>
      (super.noSuchMethod(
            Invocation.method(#updateMedicine, [medicine]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> deleteMedicine(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMedicine, [id]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<List<_i4.Medicine>> getAllMedicines() =>
      (super.noSuchMethod(
            Invocation.method(#getAllMedicines, []),
            returnValue: _i3.Future<List<_i4.Medicine>>.value(<_i4.Medicine>[]),
          )
          as _i3.Future<List<_i4.Medicine>>);

  @override
  _i3.Future<List<_i4.Medicine>> getMedicinesByCategory(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#getMedicinesByCategory, [category]),
            returnValue: _i3.Future<List<_i4.Medicine>>.value(<_i4.Medicine>[]),
          )
          as _i3.Future<List<_i4.Medicine>>);

  @override
  _i3.Future<_i4.Medicine?> getMedicineById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMedicineById, [id]),
            returnValue: _i3.Future<_i4.Medicine?>.value(),
          )
          as _i3.Future<_i4.Medicine?>);
}
